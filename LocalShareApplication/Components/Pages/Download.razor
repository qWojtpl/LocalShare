@page "/download"
@inherits AppPage

@code {

    List<FileProcess> processes = new();

    public Download()
    {
        CommunicationManager.AddClientStartHandler(RegisterHandler);
    }

    public void RegisterHandler()
    {
        processes = new();
        if (CommunicationManager.Client != null)
        {
            CommunicationManager.Client.AddEventHandler(HandleEvent);
        }
    }

    private void HandleEvent(EventType type, FileProcess process)
    {
        if (EventType.StartDownloading.Equals(type))
        {
            if (processes.Contains(process))
            {
                return;
            }
            processes.Add(process);
            NotificationManager.SendNotification("LocalShare", "LocalShare Downloader", "Started downloading " + process.FileName);
            new Thread(() =>
            {
                while (processes.Contains(process))
                {
                    Thread.Sleep(100);
                    InvokeAsync(StateHasChanged);
                }
            }).Start();
        } else if (EventType.EndDownloading.Equals(type))
        {
            NotificationManager.SendNotification("LocalShare", "LocalShare Downloader", "End downloading " + process.FileName);
            processes.Remove(process);
        } else if(EventType.Decline.Equals(type) || EventType.Cancel.Equals(type))
        {
            processes.Remove(process);
        }
        InvokeAsync(StateHasChanged);
    }

}

<div id="slide-page" class="page" style="@Loader.PageStyles["Download"]">

    <div class="header">
        <div class="header-image" @onclick="@Loader.UnloadLatest">
            <img src="images/back-arrow.svg" />
        </div>
        <div class="header-text">
            @LanguageManager.Get("download")
        </div>
    </div>

    @if (processes.Count() == 0)
    {
        <div class="empty-text">
            @if (SettingsManager.ListenForNewFiles)
            {
                <span>@LanguageManager.Get("noDownloadingFiles")</span>
            } else 
            {
                <span>@LanguageManager.Get("listeningIsOff")</span>
            }
        </div>
    } else
    {
        <div class="entries-container">
            <div class="entries">
                @foreach(FileProcess process in new List<FileProcess>(processes))
                {
                    if (process.Accepted)
                    {
                        <div class="entry">
                            <div class="entry-image">
                                <img src="images/file.svg" />
                            </div>
                            <div class="entry-middle">
                                <div class="entry-name">
                                    @process.FileName
                                </div>
                                <div class="progress-bar">
                                    <div class="progress-bar-percentage" style="width:@((int) (((double) process.ActualSize / process.FileSize) * 100))%">
                                    </div>
                                </div>
                            </div>
                            <div class="entry-end">
                                <div class="entry-cancel" @onclick="() => CommunicationManager.Client.Cancel(process)">
                                    Cancel
                                </div>
                                <div class="entry-percentage">
                                    @if(process.FileSize != 0)
                                    {
                                        @((int)(((double)process.ActualSize / process.FileSize) * 100))<text>%</text>
                                    } else
                                    {
                                        <text>INIT</text>
                                    }
                                </div>
                            </div>
                        </div>
                    } else
                    {
                        <div class="entry">
                            <div class="entry-image">
                                <img src="images/file-request.svg" />
                            </div>
                            <div class="entry-request">
                                <div class="entry-name">
                                    @process.FileName
                                </div>
                                <div class="entry-buttons">
                                    <div class="entry-accept" @onclick="(() => CommunicationManager.Client.Accept(process))">
                                        @LanguageManager.Get("accept")
                                    </div>
                                    <div class="entry-decline" @onclick="(() => CommunicationManager.Client.Decline(process))">
                                        @LanguageManager.Get("decline")
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>   
    }

</div>
@page "/upload"
@inherits AppPage

@code{

    List<FileSendProcess> processes = new();

    public Upload()
    {
        if (CommunicationManager.Server != null)
        {
            CommunicationManager.Server.AddEventHandler(HandleEvent);
        }
    }

    private void HandleEvent(EventType type, FileSendProcess process)
    {
        if (EventType.StartUploading.Equals(type))
        {
            if (processes.Contains(process))
            {
                return;
            }
            NotificationManager.SendNotification("LocalShare", "LocalShare Uploader", "Started uploading " + process.FileName);
            processes.Add(process);
        } else if (EventType.EndUploading.Equals(type))
        {
            NotificationManager.SendNotification("LocalShare", "LocalShare Uploader", "Stopped uploading" + process.FileName);
            processes.Remove(process);
        }
        InvokeAsync(StateHasChanged);
    }

}

<div id="slide-page" class="page" style="@Loader.PageStyles["Upload"]">

    <div class="header">
        <div class="header-image" @onclick="@Loader.UnloadLatest">
            <img src="images/back-arrow.svg" />
        </div>
        <div class="header-text">
            @LanguageManager.Get("upload")
        </div>
    </div>

    @if (processes.Count() == 0)
    {
        <div class="empty-text">
            <span>@LanguageManager.Get("noSendingFiles")</span>
        </div>
    } else
    {
        <div class="entries-container">
        <div class="entries">
            @foreach (FileSendProcess process in new List<FileSendProcess>(processes))
            {
                <div class="entry">
                    <div class="entry-image">
                        <img src="images/file.svg" />
                    </div>
                    <div class="entry-middle">
                        <div class="entry-name">
                            @process.FileName
                        </div>
                        <div class="entry-available">
                            Available to: @(DateTimeOffset.FromUnixTimeSeconds((process.LastRequest) + Shared.UploadTimeout).ToString().Substring(0, 19))
                        </div>
                    </div>
                    <div class="entry-end">
                        <div class="entry-cancel">
                            Cancel
                        </div>
                        <div class="entry-percentage">
                            
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    }

    <div class="upload-new" @onclick="FileManager.OpenFilePicker">
        <span>+</span>
    </div>

</div>